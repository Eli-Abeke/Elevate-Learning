import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import ParentBanner from '@/components/widgets/parentBanner'
import Confidence from '@/components/widgets/confidence'
import { React, createContext, useState } from 'react'


import { createClient } from '@supabase/supabase-js'
import History from '@/components/widgets/history'
import Welcome from '@/components/widgets/welcome'
import Suggestions from '@/components/widgets/suggestions'
import Arrows from '@/components/svgs/arrows'
import Link from 'next/link'

const supabaseUrl = process.env.SUPABASE_URL
const supabaseKey = process.env.SUPABASE_KEY
const supabase = createClient(supabaseUrl, supabaseKey)



const inter = Inter({ subsets: ['latin'] })


export default function Home() {

    const [UserItems, setUserItems] = useState(null);
    const [RecentTopics, setRecentTopics] = useState(null);
    const [Page, setPage] = useState(0);
    var translationstyle = ("transition-all duration-1000 bg-zinc-400 w-[100%] translate-x-["+ toString(100*Page)+"%]")
    var sessionData = localStorage.getItem("sb-vkggcpskdomclusmolfm-auth-token");
    var userId = JSON.parse(sessionData).user.id


    async function GetName() {
        try {
            let { data, error } = await supabase
                .from('UsersData')
                .select('*')
                .eq('id', userId)
            setUserItems(data)
        } catch (error) {
            console.error(error);
        }
    }

    async function GetTopics() {
        try {
            const { data, error } = await supabase
                .from("UserAssesmentStats")
                .select("user, Assesment!inner(Subtopic!inner(SubtopicConnector!inner(TopicConnector!inner(slug, Topic!inner(name, image)))))", { count: 'exact' })
                .eq('user', userId)
                //.order('Topics(created_at)',  { ascending: true })
                .limit(5)
            console.log(data)
            setRecentTopics(data)
        } catch (error) {
            console.error(error);
        }
    }

    function incrementPage(increment){
        if ((RecentTopics.length -1) > Page){
            if ((Page < 1 ) &( increment < 0)){
                var end = (RecentTopics.length - 1)
                console.log(end)
                setPage(end + increment)

            }
            else{
            setPage((Page + increment))}
        }
        else{
            setPage(0)
        }


        

    }


    if (UserItems) {
        if (RecentTopics) {
            return (
                <>
                    <Head>
                        <title>Create Next App</title>
                        <meta name="description" content="Generated by create next app" />
                        <meta name="viewport" content="width=device-width, initial-scale=1" />
                        <link rel="icon" href="/favicon.ico" />
                    </Head>
                    <div className='h-max p-[6vh] px-[10vw]'>
                        <div className='w-full justify-between flex'>
                            <p className='text-6xl max-w-sm'>
                                Hi <span className='font-bold text-transparent bg-clip-text bg-gradient-to-r from-[#9779E1] to-[#C9ADB1]'>{UserItems[0].firstname}</span>,
                                check out your activity
                            </p>
                            <div className='space-y-3'>
                                <div className='border-white border-2 w-[28rem] rounded-lg h-[3.5rem]' />
                                <div className='bg-white w-[28rem] rounded-lg h-[3.5rem]' />
                            </div>
                        </div>
                        <main>
                            <div className='grid grid-cols-11 grid-rows-5 min-h-[80vh] py-[5rem] gap-brand'>
                                <div className='bg-gradient-to-r from-[#9779E1] to-[#C9ADB1] rounded-Brand col-span-4 row-span-2 h-full w-full' />
                                <div className='bg-[#0c0c0c] rounded-Brand col-span-4 row-span-2 h-full w-full' />
                                <div className=' col-span-3 grid-rows-3 gap-brand grid row-span-5 h-full w-full'>
                                    <div className=' w-full h-full bg-[#b5b5b5] rounded-Brand'></div>
                                    <div className=' w-full h-full bg-[#b5b5b5] rounded-Brand'></div>
                                    <div className=' w-full h-full bg-[#b5b5b5] rounded-Brand'></div>
                                </div>
                                <div className='flex col-span-8 row-span-3 h-full w-full justify-between'>
                                    <button onClick={()=> (console.log(),incrementPage(-1))} className='rounded-Brand border-white border-2 w-[8%]'><div className='w-full flex justify-around rotate-180'><Arrows /></div></button>
                                    <div className=' w-[100%] flex overflow-hidden'>
                                        {RecentTopics.map((data, index) => (
                                            //pull more data going all the way up to subtopic
                                            //from the full cascade, then parse the data 
                                            //externally to extract slugs and such into a single,
                                            //easy to maipulate json object
                                            <div onClick={() => (console.log(data, index))} className={`rounded-Brand overflow-hidden duration-1000 border-white relative top-0 left-0 ${(String(index) == String(Page)) ? " mx-[2%] border-2  w-[100%]" : "opacity-0 border-[0px] mx-[0px] w-[0px]"}`}>
                                            <Link href={data.Assesment.Subtopic.SubtopicConnector[0].TopicConnector}><img src={data.Assesment.Subtopic.SubtopicConnector[0].TopicConnector.Topic.image} className='h-[150%] absolute -top-[20%] z-10 left-0'></img>
                                            <div className={"z-20 relative rounded-Brand  w-full h-full p-12 flex"}>
                                                <p className='w-max mt-auto text-3xl'>{data.Assesment.Subtopic.SubtopicConnector[0].TopicConnector.Topic.name}</p>
                                            </div></Link>
                                            </div>
                                            
                                        ))}
                                    </div>
                                    <button onClick={()=> (console.log(Page), incrementPage(1))} className='rounded-Brand border-white border-2 w-[8%]'><div className='w-full flex justify-around '><Arrows /></div></button>
                                </div>
                            </div>
                        </main>
                    </div>
                </>
            )
        }
        else { 
            GetTopics() 
        }
    }
    else {
        GetName()

    }
}
